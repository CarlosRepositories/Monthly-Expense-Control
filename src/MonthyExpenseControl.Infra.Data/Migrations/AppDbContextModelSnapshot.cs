// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonthyExpenseControl.Infra.Data.Context;

#nullable disable

namespace MonthyExpenseControl.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.Earning", b =>
                {
                    b.Property<int>("EarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EarningId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MonthsId")
                        .HasColumnType("int");

                    b.Property<double>("ProjectedEarning")
                        .HasColumnType("float");

                    b.Property<double>("RealizedEarning")
                        .HasColumnType("float");

                    b.HasKey("EarningId");

                    b.HasIndex("MonthsId");

                    b.ToTable("Earnings");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MonthsId")
                        .HasColumnType("int");

                    b.Property<double>("ProjectedExpense")
                        .HasColumnType("float");

                    b.Property<double>("RealizedExpense")
                        .HasColumnType("float");

                    b.HasKey("ExpenseId");

                    b.HasIndex("MonthsId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.LastYearInvestment", b =>
                {
                    b.Property<int>("LatestYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LatestYearId"));

                    b.Property<double>("TotalInvestedLastYear")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("LatestYearId");

                    b.ToTable("LastYearInvestment");

                    b.HasData(
                        new
                        {
                            LatestYearId = 1,
                            TotalInvestedLastYear = 1535.0,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.MonthInvestment", b =>
                {
                    b.Property<int>("MonthInvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonthInvestmentId"));

                    b.Property<double>("InvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double>("InvestmentPercentage")
                        .HasColumnType("float");

                    b.Property<int>("MonthsId")
                        .HasColumnType("int");

                    b.HasKey("MonthInvestmentId");

                    b.HasIndex("MonthsId");

                    b.ToTable("MonthInvestments");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.Months", b =>
                {
                    b.Property<int>("MonthsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonthsId"));

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonthsId");

                    b.ToTable("MonthsDescription");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.WithdrawalOfInvestments", b =>
                {
                    b.Property<int>("WithdrawalOfInvestmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WithdrawalOfInvestmentsId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<double>("WithDrawalValue")
                        .HasColumnType("float");

                    b.HasKey("WithdrawalOfInvestmentsId");

                    b.HasIndex("MonthId");

                    b.ToTable("WithdrawalOfInvestments");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.Earning", b =>
                {
                    b.HasOne("MonthyExpenseControl.Domain.Entities.Months", "MonthDescription")
                        .WithMany()
                        .HasForeignKey("MonthsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthDescription");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.Expense", b =>
                {
                    b.HasOne("MonthyExpenseControl.Domain.Entities.Months", "MonthDescription")
                        .WithMany()
                        .HasForeignKey("MonthsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthDescription");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.MonthInvestment", b =>
                {
                    b.HasOne("MonthyExpenseControl.Domain.Entities.Months", "Month")
                        .WithMany()
                        .HasForeignKey("MonthsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Month");
                });

            modelBuilder.Entity("MonthyExpenseControl.Domain.Entities.WithdrawalOfInvestments", b =>
                {
                    b.HasOne("MonthyExpenseControl.Domain.Entities.Months", "Month")
                        .WithMany()
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Month");
                });
#pragma warning restore 612, 618
        }
    }
}
